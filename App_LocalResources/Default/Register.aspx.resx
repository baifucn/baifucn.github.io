<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressLiteral.Text" xml:space="preserve">
    <value>地址：</value>
  </data>
  <data name="AddressRequired.ErrorMessage" xml:space="preserve">
    <value>地址必须填写</value>
  </data>
  <data name="AgreementLiteral.Text" xml:space="preserve">
    <value>注册协议：</value>
  </data>
  <data name="CodeCustom.ErrorMessage" xml:space="preserve">
    <value>验证码错误</value>
  </data>
  <data name="CodeLiteral.Text" xml:space="preserve">
    <value>验证码：</value>
  </data>
  <data name="EmailLiteral.Text" xml:space="preserve">
    <value>Email：</value>
  </data>
  <data name="EmailRegularExpression.ErrorMessage" xml:space="preserve">
    <value>Email格式错误</value>
  </data>
  <data name="EmailRequired.ErrorMessage" xml:space="preserve">
    <value>Email必须填写</value>
  </data>
  <data name="ExitButton.Text" xml:space="preserve">
    <value>不同意协议</value>
    <comment>不同意协议并注册按钮</comment>
  </data>
  <data name="FaxLiteral.Text" xml:space="preserve">
    <value>传真：</value>
  </data>
  <data name="FullNameLiteral.Text" xml:space="preserve">
    <value>姓名：</value>
  </data>
  <data name="FullNameRequired.ErrorMessage" xml:space="preserve">
    <value>姓名必须填写</value>
  </data>
  <data name="lbAnswer.Text" xml:space="preserve">
    <value>找回密码答案：</value>
  </data>
  <data name="lbQuestion.Text" xml:space="preserve">
    <value>找回密码问题：</value>
  </data>
  <data name="MemberNameCustom.ErrorMessage" xml:space="preserve">
    <value>此用户名已存在</value>
  </data>
  <data name="MemberNameLiteral.Text" xml:space="preserve">
    <value>用户名：</value>
  </data>
  <data name="MemberNameRegularExpression.ErrorMessage" xml:space="preserve">
    <value>用户名只能由 英文字母a~z、数字0~9、下划线 组成</value>
  </data>
  <data name="MemberNameRequired.ErrorMessage" xml:space="preserve">
    <value>用户名必须填写</value>
  </data>
  <data name="Message.Text" xml:space="preserve">
    <value>恭喜，会员注册成功！</value>
    <comment>会员注册成功信息</comment>
  </data>
  <data name="MsnLiteral.Text" xml:space="preserve">
    <value>MSN：</value>
  </data>
  <data name="PasswordCompare.ErrorMessage" xml:space="preserve">
    <value>两次输入密码不一致</value>
  </data>
  <data name="PasswordLiteral.Text" xml:space="preserve">
    <value>密码：</value>
  </data>
  <data name="PasswordRegularExpression.ErrorMessage" xml:space="preserve">
    <value>密码只能由 英文字母、数字、下划线 组成(6-32位)</value>
  </data>
  <data name="PasswordRequired.ErrorMessage" xml:space="preserve">
    <value>密码必须填写</value>
  </data>
  <data name="QQLiteral.Text" xml:space="preserve">
    <value>QQ：</value>
  </data>
  <data name="RegButton.Text" xml:space="preserve">
    <value>同意协议并注册</value>
    <comment>同意协议并注册按钮</comment>
  </data>
  <data name="RepeatPasswordLiteral.Text" xml:space="preserve">
    <value>重输密码：</value>
  </data>
  <data name="RequiredLabel.Text" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="SexList.Man" xml:space="preserve">
    <value>男</value>
  </data>
  <data name="SexList.Woman" xml:space="preserve">
    <value>女</value>
  </data>
  <data name="SexLiteral.Text" xml:space="preserve">
    <value>性别：</value>
  </data>
  <data name="SideRegTitle.Text" xml:space="preserve">
    <value>会员注册</value>
  </data>
  <data name="Step1.Text" xml:space="preserve">
    <value>填写注册资料</value>
  </data>
  <data name="Step2.Text" xml:space="preserve">
    <value>会员注册成功</value>
  </data>
  <data name="tbAnswerRequired.ErrorMessage" xml:space="preserve">
    <value>答案必须填写</value>
  </data>
  <data name="tbQuestionRequired.ErrorMessage" xml:space="preserve">
    <value>问题必须填写</value>
  </data>
  <data name="TelLiteral.Text" xml:space="preserve">
    <value>电话：</value>
  </data>
  <data name="TelRequired.ErrorMessage" xml:space="preserve">
    <value>电话必须填写</value>
  </data>
</root>